name: CI/CD - Java Maven App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # Cache Maven Dependencies
    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Build the JAR File
    - name: Build and Run Tests
      run: |
        mvn clean package
        mvn test

    # ✅ Upload the JAR File as an Artifact
    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: maven-build
        path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # ✅ Download the Built JAR File
    - name: Download JAR Artifact
      uses: actions/download-artifact@v4
      with:
        name: maven-build
        path: target

    # ✅ Ensure the JAR File Exists Before Deploying
    - name: Verify JAR File
      run: ls -lh target/

    # ✅ Deploy to AWS Elastic Beanstalk Using `beanstalk-deploy`
    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v13
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: art-test
        environment_name: art-test-env
        version_label: ${{ github.sha }}
        region: eu-west-1  
        deployment_package: target/maven-test-1.0-SNAPSHOT.jar  # Make sure this matches your actual JAR name
