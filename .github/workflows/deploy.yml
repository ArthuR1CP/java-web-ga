name: CI/CD - Java Maven App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # Cache Maven Dependencies
    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Build the JAR File
    - name: Build and Run Tests
      run: |
        mvn clean package
        mvn test

    # ✅ Upload the JAR File as an Artifact
    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: maven-build
        path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # ✅ Download the Built JAR File
    - name: Download JAR Artifact
      uses: actions/download-artifact@v4
      with:
        name: maven-build
        path: target

    - name: Verify JAR File
      run: ls -lh target/

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    # ✅ Install EB CLI if not installed
    - name: Install AWS Elastic Beanstalk CLI
      run: |
        python -m pip install --upgrade pip
        pip install awsebcli --upgrade --user
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        eb --version

    # ✅ Initialize Elastic Beanstalk
    - name: Initialize Elastic Beanstalk
      run: eb init -p "Corretto 17 running on 64bit Amazon Linux 2" art-app --region eu-west-3

    # ✅ Check if Environment Exists
    - name: Check if Environment Exists
      id: check_env
      run: |
        if eb status art-environment-test > /dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "exists=false" >> $GITHUB_ENV
        fi

    # ✅ Create Environment If It Doesn't Exist
    - name: Create Environment If Missing
      if: env.exists == 'false'
      run: |
        echo "Environment does not exist, creating..."
        eb create art-environment-test --cname artart1 --timeout 15
        echo "Waiting for environment to be ready..."
        sleep 180  # Wait for EB to initialize before deploying

    # ✅ Deploy to AWS Elastic Beanstalk Using `beanstalk-deploy`
    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v13
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: art-app
        environment_name: art-environment-test
        version_label: ${{ github.sha }}
        region: eu-west-3
        deployment_package: target/maven-test-1.0-SNAPSHOT.jar  # Ensure this matches your actual JAR name
